"use strict";(self.webpackChunkhome_control=self.webpackChunkhome_control||[]).push([[8785],{3905:function(e,r,n){n.d(r,{Zo:function(){return l},kt:function(){return f}});var t=n(7294);function o(e,r,n){return r in e?Object.defineProperty(e,r,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[r]=n,e}function s(e,r){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(e);r&&(t=t.filter((function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable}))),n.push.apply(n,t)}return n}function a(e){for(var r=1;r<arguments.length;r++){var n=null!=arguments[r]?arguments[r]:{};r%2?s(Object(n),!0).forEach((function(r){o(e,r,n[r])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):s(Object(n)).forEach((function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(n,r))}))}return e}function i(e,r){if(null==e)return{};var n,t,o=function(e,r){if(null==e)return{};var n,t,o={},s=Object.keys(e);for(t=0;t<s.length;t++)n=s[t],r.indexOf(n)>=0||(o[n]=e[n]);return o}(e,r);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(e);for(t=0;t<s.length;t++)n=s[t],r.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var c=t.createContext({}),u=function(e){var r=t.useContext(c),n=r;return e&&(n="function"==typeof e?e(r):a(a({},r),e)),n},l=function(e){var r=u(e.components);return t.createElement(c.Provider,{value:r},e.children)},p={inlineCode:"code",wrapper:function(e){var r=e.children;return t.createElement(t.Fragment,{},r)}},d=t.forwardRef((function(e,r){var n=e.components,o=e.mdxType,s=e.originalType,c=e.parentName,l=i(e,["components","mdxType","originalType","parentName"]),d=u(n),f=o,m=d["".concat(c,".").concat(f)]||d[f]||p[f]||s;return n?t.createElement(m,a(a({ref:r},l),{},{components:n})):t.createElement(m,a({ref:r},l))}));function f(e,r){var n=arguments,o=r&&r.mdxType;if("string"==typeof e||o){var s=n.length,a=new Array(s);a[0]=d;var i={};for(var c in r)hasOwnProperty.call(r,c)&&(i[c]=r[c]);i.originalType=e,i.mdxType="string"==typeof e?e:o,a[1]=i;for(var u=2;u<s;u++)a[u]=n[u];return t.createElement.apply(null,a)}return t.createElement.apply(null,n)}d.displayName="MDXCreateElement"},5525:function(e,r,n){n.r(r),n.d(r,{assets:function(){return l},contentTitle:function(){return c},default:function(){return f},frontMatter:function(){return i},metadata:function(){return u},toc:function(){return p}});var t=n(7462),o=n(3366),s=(n(7294),n(3905)),a=["components"],i={sidebar_position:2},c="Argon2 - secure passwords",u={unversionedId:"Services/argon2",id:"Services/argon2",title:"Argon2 - secure passwords",description:"We implements Argon2 to secure passwords in our services.",source:"@site/docs/Services/argon2.md",sourceDirName:"Services",slug:"/Services/argon2",permalink:"/HomeControl/docs/Services/argon2",draft:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/Services/argon2.md",tags:[],version:"current",sidebarPosition:2,frontMatter:{sidebar_position:2},sidebar:"tutorialSidebar",previous:{title:"Mongoose - access database",permalink:"/HomeControl/docs/Services/mongoose"},next:{title:"NodeMailer - send mails",permalink:"/HomeControl/docs/Services/nodemailer"}},l={},p=[{value:"Usage",id:"usage",level:2}],d={toc:p};function f(e){var r=e.components,n=(0,o.Z)(e,a);return(0,s.kt)("wrapper",(0,t.Z)({},d,n,{components:r,mdxType:"MDXLayout"}),(0,s.kt)("h1",{id:"argon2---secure-passwords"},"Argon2 - secure passwords"),(0,s.kt)("p",null,"We implements Argon2 to secure passwords in our services."),(0,s.kt)("h2",{id:"usage"},"Usage"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-ts"},'class Authenticator extends EventEmitter implements IAuthenticator {\n  hasher = argon2;\n\n  constructor() {\n    super();\n  }\n\n  public async login(password: string, user: any) {\n    let token = "";\n    if (await argon2.verify(user.password, password)) {\n      const signature = process.env.SECRET_KEY;\n      token = jwt.sign({ id: user._id }, signature!);\n    }\n\n    return token;\n  }\n\n  public authenticate(token: string) {\n    jwt.verify(token, process.env.SECRET_KEY!, () => {\n      return false;\n    });\n    return true;\n  }\n}\n')))}f.isMDXComponent=!0}}]);