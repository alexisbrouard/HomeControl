"use strict";(self.webpackChunkhome_control=self.webpackChunkhome_control||[]).push([[8334],{3905:function(e,t,n){n.d(t,{Zo:function(){return c},kt:function(){return f}});var r=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var l=r.createContext({}),u=function(e){var t=r.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},c=function(e){var t=u(e.components);return r.createElement(l.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},d=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,o=e.originalType,l=e.parentName,c=s(e,["components","mdxType","originalType","parentName"]),d=u(n),f=a,m=d["".concat(l,".").concat(f)]||d[f]||p[f]||o;return n?r.createElement(m,i(i({ref:t},c),{},{components:n})):r.createElement(m,i({ref:t},c))}));function f(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=n.length,i=new Array(o);i[0]=d;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s.mdxType="string"==typeof e?e:a,i[1]=s;for(var u=2;u<o;u++)i[u]=n[u];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}d.displayName="MDXCreateElement"},730:function(e,t,n){n.r(t),n.d(t,{assets:function(){return c},contentTitle:function(){return l},default:function(){return f},frontMatter:function(){return s},metadata:function(){return u},toc:function(){return p}});var r=n(7462),a=n(3366),o=(n(7294),n(3905)),i=["components"],s={sidebar_position:1},l="Authentification - Use a token",u={unversionedId:"Middlewares/authentification",id:"Middlewares/authentification",title:"Authentification - Use a token",description:"This part allows you to create a token when a user is logged in.",source:"@site/docs/Middlewares/authentification.md",sourceDirName:"Middlewares",slug:"/Middlewares/authentification",permalink:"/HomeControl/docs/Middlewares/authentification",draft:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/Middlewares/authentification.md",tags:[],version:"current",sidebarPosition:1,frontMatter:{sidebar_position:1},sidebar:"tutorialSidebar",previous:{title:"Middlewares",permalink:"/HomeControl/docs/category/middlewares"},next:{title:"XSS - Protect your API",permalink:"/HomeControl/docs/Middlewares/xss"}},c={},p=[{value:"Requirements",id:"requirements",level:2},{value:"Create a middleware for authentification",id:"create-a-middleware-for-authentification",level:2}],d={toc:p};function f(e){var t=e.components,n=(0,a.Z)(e,i);return(0,o.kt)("wrapper",(0,r.Z)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"authentification---use-a-token"},"Authentification - Use a token"),(0,o.kt)("p",null,"This part allows you to create a token when a user is logged in."),(0,o.kt)("h2",{id:"requirements"},"Requirements"),(0,o.kt)("p",null,"First of all, you need to install and import the ",(0,o.kt)("inlineCode",{parentName:"p"},"jsonwebtoken")," library.\nYou can find documentation ",(0,o.kt)("a",{parentName:"p",href:"https://www.npmjs.com/package/jsonwebtoken"},"here")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"npm install jsonwebtoken\n")),(0,o.kt)("p",null,"Then, you'll need to import the ",(0,o.kt)("inlineCode",{parentName:"p"},"jwt")," library."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-ts"},"import jwt from 'jsonwebtoken';\n")),(0,o.kt)("p",null,"Finally, you'll need to create a secret key in a ",(0,o.kt)("inlineCode",{parentName:"p"},".env")," file.\t"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash",metastring:'title=".env"',title:'".env"'},"SECRET_KEY=mysecretkey\n")),(0,o.kt)("h2",{id:"create-a-middleware-for-authentification"},"Create a middleware for authentification"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-ts",metastring:'title="Token.ts"',title:'"Token.ts"'},"import jwt from 'jsonwebtoken';\n\nimport { NextFunction, Request, Response } from \"express\";\n\nconst authenticateJWT = (req:Request, res:Response, next:NextFunction) => {\n    const authHeader = req.headers.authorization;\n\n    if (authHeader) {\n        const token = authHeader.split(' ')[1];\n\n        jwt.verify(token, process.env.SECRET_KEY!, (err, user) => {\n            if (err) {\n                return res.sendStatus(403);\n            }\n            next();\n        });\n    } else {\n        res.sendStatus(401);\n    }\n};\n\nexport default authenticateJWT;\n")))}f.isMDXComponent=!0}}]);