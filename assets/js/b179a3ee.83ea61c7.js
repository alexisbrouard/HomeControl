"use strict";(self.webpackChunkhome_control=self.webpackChunkhome_control||[]).push([[6665],{3905:function(e,t,r){r.d(t,{Zo:function(){return l},kt:function(){return f}});var n=r(7294);function o(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function a(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function s(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?a(Object(r),!0).forEach((function(t){o(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):a(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function c(e,t){if(null==e)return{};var r,n,o=function(e,t){if(null==e)return{};var r,n,o={},a=Object.keys(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||(o[r]=e[r]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(o[r]=e[r])}return o}var u=n.createContext({}),i=function(e){var t=n.useContext(u),r=t;return e&&(r="function"==typeof e?e(t):s(s({},t),e)),r},l=function(e){var t=i(e.components);return n.createElement(u.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},d=n.forwardRef((function(e,t){var r=e.components,o=e.mdxType,a=e.originalType,u=e.parentName,l=c(e,["components","mdxType","originalType","parentName"]),d=i(r),f=o,m=d["".concat(u,".").concat(f)]||d[f]||p[f]||a;return r?n.createElement(m,s(s({ref:t},l),{},{components:r})):n.createElement(m,s({ref:t},l))}));function f(e,t){var r=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var a=r.length,s=new Array(a);s[0]=d;var c={};for(var u in t)hasOwnProperty.call(t,u)&&(c[u]=t[u]);c.originalType=e,c.mdxType="string"==typeof e?e:o,s[1]=c;for(var i=2;i<a;i++)s[i]=r[i];return n.createElement.apply(null,s)}return n.createElement.apply(null,r)}d.displayName="MDXCreateElement"},5426:function(e,t,r){r.r(t),r.d(t,{assets:function(){return l},contentTitle:function(){return u},default:function(){return f},frontMatter:function(){return c},metadata:function(){return i},toc:function(){return p}});var n=r(7462),o=r(3366),a=(r(7294),r(3905)),s=["components"],c={sidebar_position:2},u="Actuator",i={unversionedId:"Controllers/actuator",id:"Controllers/actuator",title:"Actuator",description:"This part allows you to put controllers to your API for actuators.",source:"@site/docs/Controllers/actuator.md",sourceDirName:"Controllers",slug:"/Controllers/actuator",permalink:"/HomeControl/docs/Controllers/actuator",draft:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/Controllers/actuator.md",tags:[],version:"current",sidebarPosition:2,frontMatter:{sidebar_position:2},sidebar:"tutorialSidebar",previous:{title:"User",permalink:"/HomeControl/docs/Controllers/authentification"},next:{title:"Sensor",permalink:"/HomeControl/docs/Controllers/sensor"}},l={},p=[{value:"Usage",id:"usage",level:2},{value:"Get",id:"get",level:3},{value:"Get with ID",id:"get-with-id",level:3},{value:"Post",id:"post",level:3},{value:"Patch",id:"patch",level:3},{value:"Delete",id:"delete",level:3}],d={toc:p};function f(e){var t=e.components,r=(0,o.Z)(e,s);return(0,a.kt)("wrapper",(0,n.Z)({},d,r,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"actuator"},"Actuator"),(0,a.kt)("p",null,"This part allows you to put controllers to your API for actuators."),(0,a.kt)("h2",{id:"usage"},"Usage"),(0,a.kt)("h3",{id:"get"},"Get"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-ts"},'get: async (req: Request, res: Response, next: NextFunction) => {\n    try {\n      const actuator = await Actuator.find();\n      res.json(formatter("GET ACTUATOR", actuator));\n      return;\n    } catch (error) {\n      next(error);\n    }\n  },\n')),(0,a.kt)("h3",{id:"get-with-id"},"Get with ID"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-ts"},'getWithId: async (req: Request, res: Response, next: NextFunction) => {\n    try {\n      const actuator = await Actuator.findOne({ _id: req.params.id });\n      res.json(formatter("GET ACTUATOR BY ID", actuator));\n      return;\n    } catch (error) {\n      next(error);\n    }\n  },\n')),(0,a.kt)("h3",{id:"post"},"Post"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-ts"},'post: async (req: Request, res: Response, next: NextFunction) => {\n    try {\n      const actuator = await Actuator.create({\n        type: xssVerify(req.body.type),\n        designation: xssVerify(req.body.designation),\n        state: req.body.state,\n      });\n      res.json(formatter("POST ACTUATOR", actuator));\n      return;\n    } catch (error) {\n      next(error);\n    }\n  },\n')),(0,a.kt)("h3",{id:"patch"},"Patch"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-ts"},'patch: async (req: Request, res: Response, next: NextFunction) => {\n    try {\n      const actuator = await Actuator.updateOne(\n        { _id: req.params.id },\n        {\n          type: xssVerify(req.body.type),\n          designation: xssVerify(req.body.designation),\n          state: req.body.state,\n        }\n      );\n      res.json(formatter("PATCH ACTUATOR"));\n      return;\n    } catch (error) {\n      next(error);\n    }\n  },\n};\n')),(0,a.kt)("h3",{id:"delete"},"Delete"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-ts"},'delete: async (req: Request, res: Response, next: NextFunction) => {\n    try {\n      await Actuator.deleteOne({ _id: req.params.id });\n      res.json(formatter("DELETE ACTUATOR"));\n      return;\n    } catch (error) {\n      next(error);\n    }\n  },\n')))}f.isMDXComponent=!0}}]);