"use strict";(self.webpackChunkhome_control=self.webpackChunkhome_control||[]).push([[6985],{3905:function(e,n,r){r.d(n,{Zo:function(){return u},kt:function(){return m}});var t=r(7294);function o(e,n,r){return n in e?Object.defineProperty(e,n,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[n]=r,e}function a(e,n){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(e);n&&(t=t.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),r.push.apply(r,t)}return r}function i(e){for(var n=1;n<arguments.length;n++){var r=null!=arguments[n]?arguments[n]:{};n%2?a(Object(r),!0).forEach((function(n){o(e,n,r[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):a(Object(r)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(r,n))}))}return e}function s(e,n){if(null==e)return{};var r,t,o=function(e,n){if(null==e)return{};var r,t,o={},a=Object.keys(e);for(t=0;t<a.length;t++)r=a[t],n.indexOf(r)>=0||(o[r]=e[r]);return o}(e,n);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(t=0;t<a.length;t++)r=a[t],n.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(o[r]=e[r])}return o}var c=t.createContext({}),l=function(e){var n=t.useContext(c),r=n;return e&&(r="function"==typeof e?e(n):i(i({},n),e)),r},u=function(e){var n=l(e.components);return t.createElement(c.Provider,{value:n},e.children)},p={inlineCode:"code",wrapper:function(e){var n=e.children;return t.createElement(t.Fragment,{},n)}},d=t.forwardRef((function(e,n){var r=e.components,o=e.mdxType,a=e.originalType,c=e.parentName,u=s(e,["components","mdxType","originalType","parentName"]),d=l(r),m=o,f=d["".concat(c,".").concat(m)]||d[m]||p[m]||a;return r?t.createElement(f,i(i({ref:n},u),{},{components:r})):t.createElement(f,i({ref:n},u))}));function m(e,n){var r=arguments,o=n&&n.mdxType;if("string"==typeof e||o){var a=r.length,i=new Array(a);i[0]=d;var s={};for(var c in n)hasOwnProperty.call(n,c)&&(s[c]=n[c]);s.originalType=e,s.mdxType="string"==typeof e?e:o,i[1]=s;for(var l=2;l<a;l++)i[l]=r[l];return t.createElement.apply(null,i)}return t.createElement.apply(null,r)}d.displayName="MDXCreateElement"},3689:function(e,n,r){r.r(n),r.d(n,{assets:function(){return u},contentTitle:function(){return c},default:function(){return m},frontMatter:function(){return s},metadata:function(){return l},toc:function(){return p}});var t=r(7462),o=r(3366),a=(r(7294),r(3905)),i=["components"],s={sidebar_position:3},c="NodeMailer - send mails",l={unversionedId:"Services/nodemailer",id:"Services/nodemailer",title:"NodeMailer - send mails",description:"We use NodeMailer to send mails when a user is created, and when an alarm is triggered.",source:"@site/docs/Services/nodemailer.md",sourceDirName:"Services",slug:"/Services/nodemailer",permalink:"/HomeControl/docs/Services/nodemailer",draft:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/Services/nodemailer.md",tags:[],version:"current",sidebarPosition:3,frontMatter:{sidebar_position:3},sidebar:"tutorialSidebar",previous:{title:"Argon2 - secure passwords",permalink:"/HomeControl/docs/Services/argon2"},next:{title:"Routes",permalink:"/HomeControl/docs/routes"}},u={},p=[{value:"Usage",id:"usage",level:2}],d={toc:p};function m(e){var n=e.components,r=(0,o.Z)(e,i);return(0,a.kt)("wrapper",(0,t.Z)({},d,r,{components:n,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"nodemailer---send-mails"},"NodeMailer - send mails"),(0,a.kt)("p",null,"We use NodeMailer to send mails when a user is created, and when an alarm is triggered."),(0,a.kt)("h2",{id:"usage"},"Usage"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-ts"},'class Mailer implements IMailer {\n  constructor() {\n    eventEmitter.addListener("test", this.sendMail);\n  }\n\n  public async sendMail(\n    to: string,\n    subject: string,\n    text: string\n  ): Promise<void> {\n    let tranposter = nodemailer.createTransport({\n      service: "gmail",\n      auth: {\n        user: process.env.EMAIL_USER,\n        pass: process.env.MAIL_PASSWORD,\n      },\n    });\n    let info = await tranposter.sendMail({\n      from: process.env.EMAIL_USER,\n      to: to,\n      subject: subject,\n      text: text,\n      html: "<b>" + text + "</b>",\n    });\n\n    console.log("Message sent: %s", info.messageId);\n  }\n}\n')))}m.isMDXComponent=!0}}]);